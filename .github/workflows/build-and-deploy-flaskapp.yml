name: "Docker Build & Release"

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - flaskapp/**
    tags:
      - 'v*'

env:
  USER: claudeforlife
  REPO: flaskapp
  PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  GKE_CLUSTER: gorgias-sre-assessment
  GKE_REGION: us-central1
  GKE_ZONE: us-central1-a

jobs:
  create-tag-release:
    runs-on: ubuntu-latest
    if: |
      github.ref_name == 'main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Run Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          working_directory: ./flaskapp
          branches: |
            [
              'main'
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  build-push:
    runs-on: ubuntu-latest
    if: github.ref_name != 'main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Docker image metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.USER }}/${{ env.REPO }}
          flavor: latest=true
          tags: |
            type=semver,pattern={{version}}
          labels: |
            org.opencontainers.image.title=flask-app
            org.opencontainers.image.vendor=Claude Ebaneck

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:flaskapp"
          # file: ./flaskapp/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Update Docker registry description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.USER }}/${{ env.REPO }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy-webapp:
    needs: [build-push]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Helm
        uses: azure/setup-helm@v3.5
        with:
            version: v3.12.0
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
            credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
            cluster_name: ${{ env.GKE_CLUSTER }}
            location: ${{ env.GKE_ZONE }}

      - name: Install flask webapp
        run: |
            cd helm-charts/flaskapp-chart && helm upgrade --install webapp . -f ../values/webapp.yaml \
                -n app --create-namespace \
                --set image.tag=${{ steps.metadata.outputs.labels['org.opencontainers.image.version'] }} \
                --set secrets.username.value=${{ secrets.PG_WEBAPP_USER }} \
                --set secrets.password.value=${{ secrets.PG_WEBAPP_PASSWORD }} \
                --set secrets.dbName.value=${{ secrets.PG_WEBAPP_DBNAME }} \
                --set secrets.dbUrl.value=${{ secrets.PG_WEBAPP_DBURL }} \
                --set secrets.dbPort.value=${{ secrets.PG_WEBAPP_DBPORT }} \
                --set secrets.appSecret.value=${{ secrets.APP_SECRET }}
      - name: Apply ingress manifest
        run: |
          kubectl apply -f helm-charts/manifests/ingress.yaml
